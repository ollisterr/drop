{
    "components": {
        "schemas": {
            "ApartmentGroupsIn": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "group_id": {
                        "extra": {
                            "foreign_key": true,
                            "to": "drop_group"
                        },
                        "nullable": true,
                        "title": "Group Id",
                        "type": "integer"
                    }
                },
                "title": "ApartmentGroupsIn",
                "type": "object"
            },
            "ApartmentGroupsItem": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "group_id": {
                        "extra": {
                            "foreign_key": true,
                            "to": "drop_group"
                        },
                        "nullable": true,
                        "title": "Group Id",
                        "type": "integer"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "title": "ApartmentGroupsItem",
                "type": "object"
            },
            "ApartmentGroupsOptional": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "group_id": {
                        "extra": {
                            "foreign_key": true,
                            "to": "drop_group"
                        },
                        "nullable": true,
                        "title": "Group Id",
                        "type": "integer"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "title": "ApartmentGroupsOptional",
                "type": "object"
            },
            "ApartmentGroupsOutput": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "group_id": {
                        "extra": {
                            "foreign_key": true,
                            "to": "drop_group"
                        },
                        "nullable": true,
                        "title": "Group Id",
                        "type": "integer"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "title": "ApartmentGroupsOutput",
                "type": "object"
            },
            "ApartmentGroupsPlural": {
                "properties": {
                    "rows": {
                        "items": {
                            "$ref": "#/components/schemas/ApartmentGroupsItem"
                        },
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "title": "ApartmentGroupsPlural",
                "type": "object"
            },
            "ApartmentIn": {
                "properties": {
                    "address": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Address",
                        "type": "string"
                    },
                    "people": {
                        "extra": {},
                        "nullable": false,
                        "title": "People",
                        "type": "integer"
                    }
                },
                "title": "ApartmentIn",
                "type": "object"
            },
            "ApartmentItem": {
                "properties": {
                    "address": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Address",
                        "type": "string"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "people": {
                        "extra": {},
                        "nullable": false,
                        "title": "People",
                        "type": "integer"
                    }
                },
                "title": "ApartmentItem",
                "type": "object"
            },
            "ApartmentOptional": {
                "properties": {
                    "address": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Address",
                        "type": "string"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "people": {
                        "extra": {},
                        "nullable": false,
                        "title": "People",
                        "type": "integer"
                    }
                },
                "title": "ApartmentOptional",
                "type": "object"
            },
            "ApartmentOutput": {
                "properties": {
                    "address": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Address",
                        "type": "string"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "people": {
                        "extra": {},
                        "nullable": false,
                        "title": "People",
                        "type": "integer"
                    }
                },
                "title": "ApartmentOutput",
                "type": "object"
            },
            "ApartmentPlural": {
                "properties": {
                    "rows": {
                        "items": {
                            "$ref": "#/components/schemas/ApartmentItem"
                        },
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "title": "ApartmentPlural",
                "type": "object"
            },
            "BaseUserPydantic": {
                "properties": {
                    "password": {
                        "extra": {
                            "secret": true
                        },
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Password",
                        "type": "string"
                    },
                    "username": {
                        "extra": {},
                        "maxLength": 100,
                        "nullable": false,
                        "title": "Username",
                        "type": "string"
                    }
                },
                "title": "BaseUserPydantic",
                "type": "object"
            },
            "ConsumptionLastTwoWeeks_Response": {
                "properties": {
                    "apartment_id": {
                        "title": "Apartment Id",
                        "type": "integer"
                    },
                    "consumption": {
                        "title": "Consumption",
                        "type": "number"
                    },
                    "date": {
                        "format": "date",
                        "title": "Date",
                        "type": "string"
                    },
                    "week_start": {
                        "format": "date",
                        "title": "Week Start",
                        "type": "string"
                    },
                    "weekday": {
                        "title": "Weekday",
                        "type": "string"
                    }
                },
                "required": [
                    "week_start",
                    "weekday",
                    "date",
                    "apartment_id",
                    "consumption"
                ],
                "title": "ConsumptionLastTwoWeeks_Response",
                "type": "object"
            },
            "CountModel": {
                "properties": {
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "page_size": {
                        "title": "Page Size",
                        "type": "integer"
                    }
                },
                "required": [
                    "count",
                    "page_size"
                ],
                "title": "CountModel",
                "type": "object"
            },
            "DailyConsumption_Response": {
                "properties": {
                    "apartment_id": {
                        "title": "Apartment Id",
                        "type": "integer"
                    },
                    "consumption": {
                        "title": "Consumption",
                        "type": "number"
                    },
                    "date": {
                        "format": "date",
                        "title": "Date",
                        "type": "string"
                    }
                },
                "required": [
                    "consumption",
                    "apartment_id",
                    "date"
                ],
                "title": "DailyConsumption_Response",
                "type": "object"
            },
            "GroupIn": {
                "properties": {
                    "name": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Name",
                        "type": "string"
                    }
                },
                "title": "GroupIn",
                "type": "object"
            },
            "GroupItem": {
                "properties": {
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Name",
                        "type": "string"
                    }
                },
                "title": "GroupItem",
                "type": "object"
            },
            "GroupOptional": {
                "properties": {
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Name",
                        "type": "string"
                    }
                },
                "title": "GroupOptional",
                "type": "object"
            },
            "GroupOutput": {
                "properties": {
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Name",
                        "type": "string"
                    }
                },
                "title": "GroupOutput",
                "type": "object"
            },
            "GroupPlural": {
                "properties": {
                    "rows": {
                        "items": {
                            "$ref": "#/components/schemas/GroupItem"
                        },
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "title": "GroupPlural",
                "type": "object"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "title": "Detail",
                        "type": "array"
                    }
                },
                "title": "HTTPValidationError",
                "type": "object"
            },
            "MeasurementIn": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "appliance": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Appliance",
                        "type": "string"
                    },
                    "flow_time": {
                        "extra": {},
                        "nullable": false,
                        "title": "Flow Time",
                        "type": "number"
                    },
                    "power_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Power Consumption",
                        "type": "number"
                    },
                    "temp": {
                        "extra": {},
                        "nullable": false,
                        "title": "Temp",
                        "type": "number"
                    },
                    "timestamp": {
                        "extra": {},
                        "format": "date-time",
                        "nullable": false,
                        "title": "Timestamp",
                        "type": "string"
                    },
                    "water_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Water Consumption",
                        "type": "number"
                    }
                },
                "title": "MeasurementIn",
                "type": "object"
            },
            "MeasurementItem": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "appliance": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Appliance",
                        "type": "string"
                    },
                    "flow_time": {
                        "extra": {},
                        "nullable": false,
                        "title": "Flow Time",
                        "type": "number"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "power_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Power Consumption",
                        "type": "number"
                    },
                    "temp": {
                        "extra": {},
                        "nullable": false,
                        "title": "Temp",
                        "type": "number"
                    },
                    "timestamp": {
                        "extra": {},
                        "format": "date-time",
                        "nullable": false,
                        "title": "Timestamp",
                        "type": "string"
                    },
                    "water_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Water Consumption",
                        "type": "number"
                    }
                },
                "title": "MeasurementItem",
                "type": "object"
            },
            "MeasurementOptional": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "appliance": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Appliance",
                        "type": "string"
                    },
                    "flow_time": {
                        "extra": {},
                        "nullable": false,
                        "title": "Flow Time",
                        "type": "number"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "power_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Power Consumption",
                        "type": "number"
                    },
                    "temp": {
                        "extra": {},
                        "nullable": false,
                        "title": "Temp",
                        "type": "number"
                    },
                    "timestamp": {
                        "extra": {},
                        "format": "date-time",
                        "nullable": false,
                        "title": "Timestamp",
                        "type": "string"
                    },
                    "water_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Water Consumption",
                        "type": "number"
                    }
                },
                "title": "MeasurementOptional",
                "type": "object"
            },
            "MeasurementOutput": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "appliance": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Appliance",
                        "type": "string"
                    },
                    "flow_time": {
                        "extra": {},
                        "nullable": false,
                        "title": "Flow Time",
                        "type": "number"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "power_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Power Consumption",
                        "type": "number"
                    },
                    "temp": {
                        "extra": {},
                        "nullable": false,
                        "title": "Temp",
                        "type": "number"
                    },
                    "timestamp": {
                        "extra": {},
                        "format": "date-time",
                        "nullable": false,
                        "title": "Timestamp",
                        "type": "string"
                    },
                    "water_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Water Consumption",
                        "type": "number"
                    }
                },
                "title": "MeasurementOutput",
                "type": "object"
            },
            "MeasurementPlural": {
                "properties": {
                    "rows": {
                        "items": {
                            "$ref": "#/components/schemas/MeasurementItem"
                        },
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "title": "MeasurementPlural",
                "type": "object"
            },
            "ReferenceModel": {
                "properties": {
                    "columnName": {
                        "title": "Columnname",
                        "type": "string"
                    },
                    "tableName": {
                        "title": "Tablename",
                        "type": "string"
                    }
                },
                "required": [
                    "tableName",
                    "columnName"
                ],
                "title": "ReferenceModel",
                "type": "object"
            },
            "ReferencesModel": {
                "properties": {
                    "references": {
                        "items": {
                            "$ref": "#/components/schemas/ReferenceModel"
                        },
                        "title": "References",
                        "type": "array"
                    }
                },
                "required": [
                    "references"
                ],
                "title": "ReferencesModel",
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Location",
                        "type": "array"
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                },
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError",
                "type": "object"
            }
        }
    },
    "info": {
        "description": "The OpenAPI schema for drop.energy",
        "title": "Drop API",
        "version": "0.1.0",
        "x-logo": {
            "url": "https://api.drop.energy/static/drop-logo.png"
        }
    },
    "openapi": "3.0.2",
    "paths": {
        "/apartment-groups/": {
            "get": {
                "description": "Returns all rows matching the given query.",
                "operationId": "get_apartment_groups__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `apartment` column.",
                        "in": "query",
                        "name": "apartment",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `apartment` column.",
                            "title": "Apartment",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "apartment__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Apartment  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `group_id` column.",
                        "in": "query",
                        "name": "group_id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `group_id` column.",
                            "title": "Group Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `group_id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "group_id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `group_id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Group Id  Operator"
                        }
                    },
                    {
                        "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                        "in": "query",
                        "name": "__order",
                        "required": false,
                        "schema": {
                            "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                            "title": "  Order",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of results to return.",
                        "in": "query",
                        "name": "__page_size",
                        "required": false,
                        "schema": {
                            "description": "The number of results to return.",
                            "title": "  Page Size",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which page of results to return (default 1).",
                        "in": "query",
                        "name": "__page",
                        "required": false,
                        "schema": {
                            "description": "Which page of results to return (default 1).",
                            "title": "  Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                        "in": "query",
                        "name": "__visible_fields",
                        "required": false,
                        "schema": {
                            "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                            "title": "  Visible Fields",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentGroupsPlural"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get"
            },
            "post": {
                "description": "Create a new row in the table.",
                "operationId": "post_apartment_groups__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApartmentGroupsIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentGroupsOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Post"
            }
        },
        "/apartment-groups/count/": {
            "get": {
                "description": "Returns the number of rows matching the given query.",
                "operationId": "count_apartment_groups_count__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `apartment` column.",
                        "in": "query",
                        "name": "apartment",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `apartment` column.",
                            "title": "Apartment",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "apartment__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Apartment  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `group_id` column.",
                        "in": "query",
                        "name": "group_id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `group_id` column.",
                            "title": "Group Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `group_id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "group_id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `group_id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Group Id  Operator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Count"
            }
        },
        "/apartment-groups/ids/": {
            "get": {
                "description": "Returns a mapping of row IDs to a readable representation.",
                "operationId": "ids_apartment_groups_ids__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Ids Apartment Groups Ids  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Ids"
            }
        },
        "/apartment-groups/new/": {
            "get": {
                "description": "Returns all of the default values for a new row,\nbut doesn't save it.",
                "operationId": "new_apartment_groups_new__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response New Apartment Groups New  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "New"
            }
        },
        "/apartment-groups/references/": {
            "get": {
                "description": "Returns a list of objects showing relationships with other tables.",
                "operationId": "references_apartment_groups_references__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferencesModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "References"
            }
        },
        "/apartment-groups/schema/": {
            "get": {
                "description": "Returns the JSON schema for the given table.",
                "operationId": "schema_apartment_groups_schema__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Schema Apartment Groups Schema  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Schema"
            }
        },
        "/apartment-groups/{row_id}/": {
            "delete": {
                "description": "Delete a single row from the table.",
                "operationId": "delete_single_apartment_groups__row_id___delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Delete Single"
            },
            "get": {
                "description": "Retrieve a single row from the table.",
                "operationId": "get_single_apartment_groups__row_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentGroupsOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Single"
            },
            "patch": {
                "description": "Update a single row.",
                "operationId": "patch_apartment_groups__row_id___patch",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApartmentGroupsOptional"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentGroupsOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Patch"
            },
            "put": {
                "description": "Insert or update a single row.",
                "operationId": "put_apartment_groups__row_id___put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApartmentGroupsIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentGroupsOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Put"
            }
        },
        "/apartment/": {
            "get": {
                "description": "Returns all rows matching the given query.",
                "operationId": "get_apartment__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `address` column.",
                        "in": "query",
                        "name": "address",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `address` column.",
                            "maxLength": 255,
                            "title": "Address",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `people` column.",
                        "in": "query",
                        "name": "people",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `people` column.",
                            "title": "People",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `people`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "people__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `people`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "People  Operator"
                        }
                    },
                    {
                        "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                        "in": "query",
                        "name": "__order",
                        "required": false,
                        "schema": {
                            "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                            "title": "  Order",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of results to return.",
                        "in": "query",
                        "name": "__page_size",
                        "required": false,
                        "schema": {
                            "description": "The number of results to return.",
                            "title": "  Page Size",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which page of results to return (default 1).",
                        "in": "query",
                        "name": "__page",
                        "required": false,
                        "schema": {
                            "description": "Which page of results to return (default 1).",
                            "title": "  Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                        "in": "query",
                        "name": "__visible_fields",
                        "required": false,
                        "schema": {
                            "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                            "title": "  Visible Fields",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentPlural"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get"
            },
            "post": {
                "description": "Create a new row in the table.",
                "operationId": "post_apartment__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApartmentIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Post"
            }
        },
        "/apartment/count/": {
            "get": {
                "description": "Returns the number of rows matching the given query.",
                "operationId": "count_apartment_count__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `address` column.",
                        "in": "query",
                        "name": "address",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `address` column.",
                            "maxLength": 255,
                            "title": "Address",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `people` column.",
                        "in": "query",
                        "name": "people",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `people` column.",
                            "title": "People",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `people`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "people__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `people`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "People  Operator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Count"
            }
        },
        "/apartment/ids/": {
            "get": {
                "description": "Returns a mapping of row IDs to a readable representation.",
                "operationId": "ids_apartment_ids__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Ids Apartment Ids  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Ids"
            }
        },
        "/apartment/new/": {
            "get": {
                "description": "Returns all of the default values for a new row,\nbut doesn't save it.",
                "operationId": "new_apartment_new__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response New Apartment New  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "New"
            }
        },
        "/apartment/references/": {
            "get": {
                "description": "Returns a list of objects showing relationships with other tables.",
                "operationId": "references_apartment_references__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferencesModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "References"
            }
        },
        "/apartment/schema/": {
            "get": {
                "description": "Returns the JSON schema for the given table.",
                "operationId": "schema_apartment_schema__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Schema Apartment Schema  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Schema"
            }
        },
        "/apartment/{row_id}/": {
            "delete": {
                "description": "Delete a single row from the table.",
                "operationId": "delete_single_apartment__row_id___delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Delete Single"
            },
            "get": {
                "description": "Retrieve a single row from the table.",
                "operationId": "get_single_apartment__row_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Single"
            },
            "patch": {
                "description": "Update a single row.",
                "operationId": "patch_apartment__row_id___patch",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApartmentOptional"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Patch"
            },
            "put": {
                "description": "Insert or update a single row.",
                "operationId": "put_apartment__row_id___put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApartmentIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Put"
            }
        },
        "/group/": {
            "get": {
                "description": "Returns all rows matching the given query.",
                "operationId": "get_group__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `name` column.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `name` column.",
                            "maxLength": 255,
                            "title": "Name",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                        "in": "query",
                        "name": "__order",
                        "required": false,
                        "schema": {
                            "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                            "title": "  Order",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of results to return.",
                        "in": "query",
                        "name": "__page_size",
                        "required": false,
                        "schema": {
                            "description": "The number of results to return.",
                            "title": "  Page Size",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which page of results to return (default 1).",
                        "in": "query",
                        "name": "__page",
                        "required": false,
                        "schema": {
                            "description": "Which page of results to return (default 1).",
                            "title": "  Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                        "in": "query",
                        "name": "__visible_fields",
                        "required": false,
                        "schema": {
                            "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                            "title": "  Visible Fields",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupPlural"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get"
            },
            "post": {
                "description": "Create a new row in the table.",
                "operationId": "post_group__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Post"
            }
        },
        "/group/count/": {
            "get": {
                "description": "Returns the number of rows matching the given query.",
                "operationId": "count_group_count__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `name` column.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `name` column.",
                            "maxLength": 255,
                            "title": "Name",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Count"
            }
        },
        "/group/ids/": {
            "get": {
                "description": "Returns a mapping of row IDs to a readable representation.",
                "operationId": "ids_group_ids__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Ids Group Ids  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Ids"
            }
        },
        "/group/new/": {
            "get": {
                "description": "Returns all of the default values for a new row,\nbut doesn't save it.",
                "operationId": "new_group_new__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response New Group New  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "New"
            }
        },
        "/group/references/": {
            "get": {
                "description": "Returns a list of objects showing relationships with other tables.",
                "operationId": "references_group_references__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferencesModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "References"
            }
        },
        "/group/schema/": {
            "get": {
                "description": "Returns the JSON schema for the given table.",
                "operationId": "schema_group_schema__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Schema Group Schema  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Schema"
            }
        },
        "/group/{row_id}/": {
            "delete": {
                "description": "Delete a single row from the table.",
                "operationId": "delete_single_group__row_id___delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Delete Single"
            },
            "get": {
                "description": "Retrieve a single row from the table.",
                "operationId": "get_single_group__row_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Single"
            },
            "patch": {
                "description": "Update a single row.",
                "operationId": "patch_group__row_id___patch",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupOptional"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Patch"
            },
            "put": {
                "description": "Insert or update a single row.",
                "operationId": "put_group__row_id___put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Put"
            }
        },
        "/kpi/consumption-daily/{apartment_id}/{date}": {
            "get": {
                "operationId": "get_consumption_kpi_consumption_daily__apartment_id___date__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "apartment_id",
                        "required": true,
                        "schema": {
                            "minimum": 0.0,
                            "title": "The ID of the apartment to get data for",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "date",
                        "required": true,
                        "schema": {
                            "title": "The date to get data for",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DailyConsumption_Response"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Consumption",
                "tags": [
                    "consumption"
                ]
            }
        },
        "/kpi/consumption-weekly/{apartment_id}/{num_weeks}": {
            "get": {
                "operationId": "get_consumption_last_two_week_kpi_consumption_weekly__apartment_id___num_weeks__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "apartment_id",
                        "required": true,
                        "schema": {
                            "minimum": 0.0,
                            "title": "The ID of the apartment to get data for",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "num_weeks",
                        "required": true,
                        "schema": {
                            "title": "The number of weeks to get data for",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConsumptionLastTwoWeeks_Response"
                                    },
                                    "title": "Response Get Consumption Last Two Week Kpi Consumption Weekly  Apartment Id   Num Weeks  Get",
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Consumption Last Two Week",
                "tags": [
                    "consumption"
                ]
            }
        },
        "/kpi/hygiene-scores/{group_id}/{date}": {
            "get": {
                "operationId": "hygiene_scores_kpi_hygiene_scores__group_id___date__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "schema": {
                            "title": "Group Id",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "date",
                        "required": true,
                        "schema": {
                            "title": "Date",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Hygiene Scores",
                "tags": [
                    "kpi"
                ]
            }
        },
        "/kpi/sustainability-scores/{group_id}/{date}": {
            "get": {
                "operationId": "sustainability_scores_kpi_sustainability_scores__group_id___date__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "schema": {
                            "title": "Group Id",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "date",
                        "required": true,
                        "schema": {
                            "title": "Date",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Sustainability Scores",
                "tags": [
                    "kpi"
                ]
            }
        },
        "/kpi/weekly-change/{apartment_id}": {
            "get": {
                "operationId": "get_user_weekly_trend_kpi_weekly_change__apartment_id__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "apartment_id",
                        "required": true,
                        "schema": {
                            "minimum": 0.0,
                            "title": "The ID of the apartment to get data for",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get User Weekly Trend Kpi Weekly Change  Apartment Id  Get",
                                    "type": "number"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get User Weekly Trend",
                "tags": [
                    "kpi"
                ]
            }
        },
        "/measurement/": {
            "get": {
                "description": "Returns all rows matching the given query.",
                "operationId": "get_measurement__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `timestamp` column.",
                        "in": "query",
                        "name": "timestamp",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `timestamp` column.",
                            "format": "date-time",
                            "title": "Timestamp",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `appliance` column.",
                        "in": "query",
                        "name": "appliance",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `appliance` column.",
                            "maxLength": 255,
                            "title": "Appliance",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `apartment` column.",
                        "in": "query",
                        "name": "apartment",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `apartment` column.",
                            "title": "Apartment",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "apartment__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Apartment  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `power_consumption` column.",
                        "in": "query",
                        "name": "power_consumption",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `power_consumption` column.",
                            "title": "Power Consumption",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by the `water_consumption` column.",
                        "in": "query",
                        "name": "water_consumption",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `water_consumption` column.",
                            "title": "Water Consumption",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by the `temp` column.",
                        "in": "query",
                        "name": "temp",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `temp` column.",
                            "title": "Temp",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by the `flow_time` column.",
                        "in": "query",
                        "name": "flow_time",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `flow_time` column.",
                            "title": "Flow Time",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                        "in": "query",
                        "name": "__order",
                        "required": false,
                        "schema": {
                            "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                            "title": "  Order",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of results to return.",
                        "in": "query",
                        "name": "__page_size",
                        "required": false,
                        "schema": {
                            "description": "The number of results to return.",
                            "title": "  Page Size",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which page of results to return (default 1).",
                        "in": "query",
                        "name": "__page",
                        "required": false,
                        "schema": {
                            "description": "Which page of results to return (default 1).",
                            "title": "  Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                        "in": "query",
                        "name": "__visible_fields",
                        "required": false,
                        "schema": {
                            "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                            "title": "  Visible Fields",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementPlural"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get"
            },
            "post": {
                "description": "Create a new row in the table.",
                "operationId": "post_measurement__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Post"
            }
        },
        "/measurement/count/": {
            "get": {
                "description": "Returns the number of rows matching the given query.",
                "operationId": "count_measurement_count__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `timestamp` column.",
                        "in": "query",
                        "name": "timestamp",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `timestamp` column.",
                            "format": "date-time",
                            "title": "Timestamp",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `appliance` column.",
                        "in": "query",
                        "name": "appliance",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `appliance` column.",
                            "maxLength": 255,
                            "title": "Appliance",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `apartment` column.",
                        "in": "query",
                        "name": "apartment",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `apartment` column.",
                            "title": "Apartment",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "apartment__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Apartment  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `power_consumption` column.",
                        "in": "query",
                        "name": "power_consumption",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `power_consumption` column.",
                            "title": "Power Consumption",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by the `water_consumption` column.",
                        "in": "query",
                        "name": "water_consumption",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `water_consumption` column.",
                            "title": "Water Consumption",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by the `temp` column.",
                        "in": "query",
                        "name": "temp",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `temp` column.",
                            "title": "Temp",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by the `flow_time` column.",
                        "in": "query",
                        "name": "flow_time",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `flow_time` column.",
                            "title": "Flow Time",
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Count"
            }
        },
        "/measurement/ids/": {
            "get": {
                "description": "Returns a mapping of row IDs to a readable representation.",
                "operationId": "ids_measurement_ids__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Ids Measurement Ids  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Ids"
            }
        },
        "/measurement/new/": {
            "get": {
                "description": "Returns all of the default values for a new row,\nbut doesn't save it.",
                "operationId": "new_measurement_new__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response New Measurement New  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "New"
            }
        },
        "/measurement/references/": {
            "get": {
                "description": "Returns a list of objects showing relationships with other tables.",
                "operationId": "references_measurement_references__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferencesModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "References"
            }
        },
        "/measurement/schema/": {
            "get": {
                "description": "Returns the JSON schema for the given table.",
                "operationId": "schema_measurement_schema__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Schema Measurement Schema  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Schema"
            }
        },
        "/measurement/{row_id}/": {
            "delete": {
                "description": "Delete a single row from the table.",
                "operationId": "delete_single_measurement__row_id___delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Delete Single"
            },
            "get": {
                "description": "Retrieve a single row from the table.",
                "operationId": "get_single_measurement__row_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Single"
            },
            "patch": {
                "description": "Update a single row.",
                "operationId": "patch_measurement__row_id___patch",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementOptional"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Patch"
            },
            "put": {
                "description": "Insert or update a single row.",
                "operationId": "put_measurement__row_id___put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Put"
            }
        },
        "/users/me": {
            "get": {
                "operationId": "get_current_user_users_me_get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Get Current User",
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{username}": {
            "get": {
                "operationId": "get_users_users__username__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "title": "The username to search for",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BaseUserPydantic"
                                    },
                                    "title": "Response Get Users Users  Username  Get",
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Users",
                "tags": [
                    "users"
                ]
            }
        }
    }
}