{
    "components": {
        "schemas": {
            "ApartmentItem": {
                "properties": {
                    "address": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Address",
                        "type": "string"
                    },
                    "appliance": {
                        "extra": {
                            "foreign_key": true,
                            "to": "appliance"
                        },
                        "nullable": true,
                        "title": "Appliance",
                        "type": "integer"
                    },
                    "created_on": {
                        "extra": {},
                        "format": "date-time",
                        "nullable": false,
                        "title": "Created On",
                        "type": "string"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "owner": {
                        "extra": {},
                        "format": "text-area",
                        "nullable": false,
                        "title": "Owner",
                        "type": "string"
                    },
                    "people": {
                        "extra": {},
                        "nullable": false,
                        "title": "People",
                        "type": "integer"
                    }
                },
                "title": "ApartmentItem",
                "type": "object"
            },
            "ApartmentOutput": {
                "properties": {
                    "address": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Address",
                        "type": "string"
                    },
                    "appliance": {
                        "extra": {
                            "foreign_key": true,
                            "to": "appliance"
                        },
                        "nullable": true,
                        "title": "Appliance",
                        "type": "integer"
                    },
                    "created_on": {
                        "extra": {},
                        "format": "date-time",
                        "nullable": false,
                        "title": "Created On",
                        "type": "string"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "owner": {
                        "extra": {},
                        "format": "text-area",
                        "nullable": false,
                        "title": "Owner",
                        "type": "string"
                    },
                    "people": {
                        "extra": {},
                        "nullable": false,
                        "title": "People",
                        "type": "integer"
                    }
                },
                "title": "ApartmentOutput",
                "type": "object"
            },
            "ApartmentPlural": {
                "properties": {
                    "rows": {
                        "items": {
                            "$ref": "#/components/schemas/ApartmentItem"
                        },
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "title": "ApartmentPlural",
                "type": "object"
            },
            "ApplianceItem": {
                "properties": {
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "measurement": {
                        "extra": {
                            "foreign_key": true,
                            "to": "measurement"
                        },
                        "nullable": true,
                        "title": "Measurement",
                        "type": "integer"
                    },
                    "name": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Name",
                        "type": "string"
                    }
                },
                "title": "ApplianceItem",
                "type": "object"
            },
            "ApplianceOutput": {
                "properties": {
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "measurement": {
                        "extra": {
                            "foreign_key": true,
                            "to": "measurement"
                        },
                        "nullable": true,
                        "title": "Measurement",
                        "type": "integer"
                    },
                    "name": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Name",
                        "type": "string"
                    }
                },
                "title": "ApplianceOutput",
                "type": "object"
            },
            "AppliancePlural": {
                "properties": {
                    "rows": {
                        "items": {
                            "$ref": "#/components/schemas/ApplianceItem"
                        },
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "title": "AppliancePlural",
                "type": "object"
            },
            "CountModel": {
                "properties": {
                    "count": {
                        "title": "Count",
                        "type": "integer"
                    },
                    "page_size": {
                        "title": "Page Size",
                        "type": "integer"
                    }
                },
                "required": [
                    "count",
                    "page_size"
                ],
                "title": "CountModel",
                "type": "object"
            },
            "GroupItem": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Name",
                        "type": "string"
                    },
                    "resident": {
                        "extra": {
                            "foreign_key": true,
                            "to": "resident"
                        },
                        "nullable": true,
                        "title": "Resident",
                        "type": "integer"
                    }
                },
                "title": "GroupItem",
                "type": "object"
            },
            "GroupOutput": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "extra": {},
                        "maxLength": 255,
                        "nullable": false,
                        "title": "Name",
                        "type": "string"
                    },
                    "resident": {
                        "extra": {
                            "foreign_key": true,
                            "to": "resident"
                        },
                        "nullable": true,
                        "title": "Resident",
                        "type": "integer"
                    }
                },
                "title": "GroupOutput",
                "type": "object"
            },
            "GroupPlural": {
                "properties": {
                    "rows": {
                        "items": {
                            "$ref": "#/components/schemas/GroupItem"
                        },
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "title": "GroupPlural",
                "type": "object"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "title": "Detail",
                        "type": "array"
                    }
                },
                "title": "HTTPValidationError",
                "type": "object"
            },
            "MeasurementItem": {
                "properties": {
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "power_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Power Consumption",
                        "type": "number"
                    },
                    "timestamp": {
                        "extra": {},
                        "format": "date-time",
                        "nullable": false,
                        "title": "Timestamp",
                        "type": "string"
                    },
                    "water_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Water Consumption",
                        "type": "number"
                    }
                },
                "title": "MeasurementItem",
                "type": "object"
            },
            "MeasurementOutput": {
                "properties": {
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    },
                    "power_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Power Consumption",
                        "type": "number"
                    },
                    "timestamp": {
                        "extra": {},
                        "format": "date-time",
                        "nullable": false,
                        "title": "Timestamp",
                        "type": "string"
                    },
                    "water_consumption": {
                        "extra": {},
                        "nullable": false,
                        "title": "Water Consumption",
                        "type": "number"
                    }
                },
                "title": "MeasurementOutput",
                "type": "object"
            },
            "MeasurementPlural": {
                "properties": {
                    "rows": {
                        "items": {
                            "$ref": "#/components/schemas/MeasurementItem"
                        },
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "title": "MeasurementPlural",
                "type": "object"
            },
            "ReferenceModel": {
                "properties": {
                    "columnName": {
                        "title": "Columnname",
                        "type": "string"
                    },
                    "tableName": {
                        "title": "Tablename",
                        "type": "string"
                    }
                },
                "required": [
                    "tableName",
                    "columnName"
                ],
                "title": "ReferenceModel",
                "type": "object"
            },
            "ReferencesModel": {
                "properties": {
                    "references": {
                        "items": {
                            "$ref": "#/components/schemas/ReferenceModel"
                        },
                        "title": "References",
                        "type": "array"
                    }
                },
                "required": [
                    "references"
                ],
                "title": "ReferencesModel",
                "type": "object"
            },
            "ResidentItem": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "title": "ResidentItem",
                "type": "object"
            },
            "ResidentOutput": {
                "properties": {
                    "apartment": {
                        "extra": {
                            "foreign_key": true,
                            "to": "apartment"
                        },
                        "nullable": true,
                        "title": "Apartment",
                        "type": "integer"
                    },
                    "id": {
                        "extra": {},
                        "nullable": false,
                        "title": "Id",
                        "type": "integer"
                    }
                },
                "title": "ResidentOutput",
                "type": "object"
            },
            "ResidentPlural": {
                "properties": {
                    "rows": {
                        "items": {
                            "$ref": "#/components/schemas/ResidentItem"
                        },
                        "title": "Rows",
                        "type": "array"
                    }
                },
                "title": "ResidentPlural",
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Location",
                        "type": "array"
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                },
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError",
                "type": "object"
            }
        }
    },
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "openapi": "3.0.2",
    "paths": {
        "/apartment/": {
            "get": {
                "description": "Returns all rows matching the given query.",
                "operationId": "get_apartment__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `address` column.",
                        "in": "query",
                        "name": "address",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `address` column.",
                            "maxLength": 255,
                            "title": "Address",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `owner` column.",
                        "in": "query",
                        "name": "owner",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `owner` column.",
                            "title": "Owner",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Specifies how `owner` should be matched - `contains` (default), `exact`, `starts`, `ends`.",
                        "in": "query",
                        "name": "owner__match",
                        "required": false,
                        "schema": {
                            "description": "Specifies how `owner` should be matched - `contains` (default), `exact`, `starts`, `ends`.",
                            "title": "Owner  Match"
                        }
                    },
                    {
                        "description": "Filter by the `people` column.",
                        "in": "query",
                        "name": "people",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `people` column.",
                            "title": "People",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `people`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "people__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `people`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "People  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `created_on` column.",
                        "in": "query",
                        "name": "created_on",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `created_on` column.",
                            "format": "date-time",
                            "title": "Created On",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `appliance` column.",
                        "in": "query",
                        "name": "appliance",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `appliance` column.",
                            "title": "Appliance",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `appliance`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "appliance__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `appliance`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Appliance  Operator"
                        }
                    },
                    {
                        "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                        "in": "query",
                        "name": "__order",
                        "required": false,
                        "schema": {
                            "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                            "title": "  Order",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of results to return.",
                        "in": "query",
                        "name": "__page_size",
                        "required": false,
                        "schema": {
                            "description": "The number of results to return.",
                            "title": "  Page Size",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which page of results to return (default 1).",
                        "in": "query",
                        "name": "__page",
                        "required": false,
                        "schema": {
                            "description": "Which page of results to return (default 1).",
                            "title": "  Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                        "in": "query",
                        "name": "__visible_fields",
                        "required": false,
                        "schema": {
                            "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                            "title": "  Visible Fields",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentPlural"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get"
            }
        },
        "/apartment/count/": {
            "get": {
                "description": "Returns the number of rows matching the given query.",
                "operationId": "count_apartment_count__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `address` column.",
                        "in": "query",
                        "name": "address",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `address` column.",
                            "maxLength": 255,
                            "title": "Address",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `owner` column.",
                        "in": "query",
                        "name": "owner",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `owner` column.",
                            "title": "Owner",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Specifies how `owner` should be matched - `contains` (default), `exact`, `starts`, `ends`.",
                        "in": "query",
                        "name": "owner__match",
                        "required": false,
                        "schema": {
                            "description": "Specifies how `owner` should be matched - `contains` (default), `exact`, `starts`, `ends`.",
                            "title": "Owner  Match"
                        }
                    },
                    {
                        "description": "Filter by the `people` column.",
                        "in": "query",
                        "name": "people",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `people` column.",
                            "title": "People",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `people`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "people__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `people`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "People  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `created_on` column.",
                        "in": "query",
                        "name": "created_on",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `created_on` column.",
                            "format": "date-time",
                            "title": "Created On",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `appliance` column.",
                        "in": "query",
                        "name": "appliance",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `appliance` column.",
                            "title": "Appliance",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `appliance`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "appliance__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `appliance`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Appliance  Operator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Count"
            }
        },
        "/apartment/ids/": {
            "get": {
                "description": "Returns a mapping of row IDs to a readable representation.",
                "operationId": "ids_apartment_ids__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Ids Apartment Ids  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Ids"
            }
        },
        "/apartment/new/": {
            "get": {
                "description": "Returns all of the default values for a new row,\nbut doesn't save it.",
                "operationId": "new_apartment_new__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response New Apartment New  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "New"
            }
        },
        "/apartment/references/": {
            "get": {
                "description": "Returns a list of objects showing relationships with other tables.",
                "operationId": "references_apartment_references__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferencesModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "References"
            }
        },
        "/apartment/schema/": {
            "get": {
                "description": "Returns the JSON schema for the given table.",
                "operationId": "schema_apartment_schema__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Schema Apartment Schema  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Schema"
            }
        },
        "/apartment/{row_id}/": {
            "get": {
                "description": "Retrieve a single row from the table.",
                "operationId": "get_single_apartment__row_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApartmentOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Single"
            }
        },
        "/appliance/": {
            "get": {
                "description": "Returns all rows matching the given query.",
                "operationId": "get_appliance__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `name` column.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `name` column.",
                            "maxLength": 255,
                            "title": "Name",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `measurement` column.",
                        "in": "query",
                        "name": "measurement",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `measurement` column.",
                            "title": "Measurement",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `measurement`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "measurement__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `measurement`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Measurement  Operator"
                        }
                    },
                    {
                        "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                        "in": "query",
                        "name": "__order",
                        "required": false,
                        "schema": {
                            "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                            "title": "  Order",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of results to return.",
                        "in": "query",
                        "name": "__page_size",
                        "required": false,
                        "schema": {
                            "description": "The number of results to return.",
                            "title": "  Page Size",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which page of results to return (default 1).",
                        "in": "query",
                        "name": "__page",
                        "required": false,
                        "schema": {
                            "description": "Which page of results to return (default 1).",
                            "title": "  Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                        "in": "query",
                        "name": "__visible_fields",
                        "required": false,
                        "schema": {
                            "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                            "title": "  Visible Fields",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppliancePlural"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get"
            }
        },
        "/appliance/count/": {
            "get": {
                "description": "Returns the number of rows matching the given query.",
                "operationId": "count_appliance_count__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `name` column.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `name` column.",
                            "maxLength": 255,
                            "title": "Name",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `measurement` column.",
                        "in": "query",
                        "name": "measurement",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `measurement` column.",
                            "title": "Measurement",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `measurement`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "measurement__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `measurement`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Measurement  Operator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Count"
            }
        },
        "/appliance/ids/": {
            "get": {
                "description": "Returns a mapping of row IDs to a readable representation.",
                "operationId": "ids_appliance_ids__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Ids Appliance Ids  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Ids"
            }
        },
        "/appliance/new/": {
            "get": {
                "description": "Returns all of the default values for a new row,\nbut doesn't save it.",
                "operationId": "new_appliance_new__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response New Appliance New  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "New"
            }
        },
        "/appliance/references/": {
            "get": {
                "description": "Returns a list of objects showing relationships with other tables.",
                "operationId": "references_appliance_references__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferencesModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "References"
            }
        },
        "/appliance/schema/": {
            "get": {
                "description": "Returns the JSON schema for the given table.",
                "operationId": "schema_appliance_schema__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Schema Appliance Schema  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Schema"
            }
        },
        "/appliance/{row_id}/": {
            "get": {
                "description": "Retrieve a single row from the table.",
                "operationId": "get_single_appliance__row_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplianceOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Single"
            }
        },
        "/group/": {
            "get": {
                "description": "Returns all rows matching the given query.",
                "operationId": "get_group__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `name` column.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `name` column.",
                            "maxLength": 255,
                            "title": "Name",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `resident` column.",
                        "in": "query",
                        "name": "resident",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `resident` column.",
                            "title": "Resident",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `resident`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "resident__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `resident`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Resident  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `apartment` column.",
                        "in": "query",
                        "name": "apartment",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `apartment` column.",
                            "title": "Apartment",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "apartment__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Apartment  Operator"
                        }
                    },
                    {
                        "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                        "in": "query",
                        "name": "__order",
                        "required": false,
                        "schema": {
                            "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                            "title": "  Order",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of results to return.",
                        "in": "query",
                        "name": "__page_size",
                        "required": false,
                        "schema": {
                            "description": "The number of results to return.",
                            "title": "  Page Size",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which page of results to return (default 1).",
                        "in": "query",
                        "name": "__page",
                        "required": false,
                        "schema": {
                            "description": "Which page of results to return (default 1).",
                            "title": "  Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                        "in": "query",
                        "name": "__visible_fields",
                        "required": false,
                        "schema": {
                            "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                            "title": "  Visible Fields",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupPlural"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get"
            }
        },
        "/group/count/": {
            "get": {
                "description": "Returns the number of rows matching the given query.",
                "operationId": "count_group_count__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `name` column.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `name` column.",
                            "maxLength": 255,
                            "title": "Name",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `resident` column.",
                        "in": "query",
                        "name": "resident",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `resident` column.",
                            "title": "Resident",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `resident`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "resident__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `resident`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Resident  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `apartment` column.",
                        "in": "query",
                        "name": "apartment",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `apartment` column.",
                            "title": "Apartment",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "apartment__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Apartment  Operator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Count"
            }
        },
        "/group/ids/": {
            "get": {
                "description": "Returns a mapping of row IDs to a readable representation.",
                "operationId": "ids_group_ids__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Ids Group Ids  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Ids"
            }
        },
        "/group/new/": {
            "get": {
                "description": "Returns all of the default values for a new row,\nbut doesn't save it.",
                "operationId": "new_group_new__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response New Group New  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "New"
            }
        },
        "/group/references/": {
            "get": {
                "description": "Returns a list of objects showing relationships with other tables.",
                "operationId": "references_group_references__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferencesModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "References"
            }
        },
        "/group/schema/": {
            "get": {
                "description": "Returns the JSON schema for the given table.",
                "operationId": "schema_group_schema__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Schema Group Schema  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Schema"
            }
        },
        "/group/{row_id}/": {
            "get": {
                "description": "Retrieve a single row from the table.",
                "operationId": "get_single_group__row_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Single"
            }
        },
        "/measurement/": {
            "get": {
                "description": "Returns all rows matching the given query.",
                "operationId": "get_measurement__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `timestamp` column.",
                        "in": "query",
                        "name": "timestamp",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `timestamp` column.",
                            "format": "date-time",
                            "title": "Timestamp",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `water_consumption` column.",
                        "in": "query",
                        "name": "water_consumption",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `water_consumption` column.",
                            "title": "Water Consumption",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by the `power_consumption` column.",
                        "in": "query",
                        "name": "power_consumption",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `power_consumption` column.",
                            "title": "Power Consumption",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                        "in": "query",
                        "name": "__order",
                        "required": false,
                        "schema": {
                            "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                            "title": "  Order",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of results to return.",
                        "in": "query",
                        "name": "__page_size",
                        "required": false,
                        "schema": {
                            "description": "The number of results to return.",
                            "title": "  Page Size",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which page of results to return (default 1).",
                        "in": "query",
                        "name": "__page",
                        "required": false,
                        "schema": {
                            "description": "Which page of results to return (default 1).",
                            "title": "  Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                        "in": "query",
                        "name": "__visible_fields",
                        "required": false,
                        "schema": {
                            "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                            "title": "  Visible Fields",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementPlural"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get"
            }
        },
        "/measurement/count/": {
            "get": {
                "description": "Returns the number of rows matching the given query.",
                "operationId": "count_measurement_count__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `timestamp` column.",
                        "in": "query",
                        "name": "timestamp",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `timestamp` column.",
                            "format": "date-time",
                            "title": "Timestamp",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by the `water_consumption` column.",
                        "in": "query",
                        "name": "water_consumption",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `water_consumption` column.",
                            "title": "Water Consumption",
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by the `power_consumption` column.",
                        "in": "query",
                        "name": "power_consumption",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `power_consumption` column.",
                            "title": "Power Consumption",
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Count"
            }
        },
        "/measurement/ids/": {
            "get": {
                "description": "Returns a mapping of row IDs to a readable representation.",
                "operationId": "ids_measurement_ids__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Ids Measurement Ids  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Ids"
            }
        },
        "/measurement/new/": {
            "get": {
                "description": "Returns all of the default values for a new row,\nbut doesn't save it.",
                "operationId": "new_measurement_new__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response New Measurement New  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "New"
            }
        },
        "/measurement/references/": {
            "get": {
                "description": "Returns a list of objects showing relationships with other tables.",
                "operationId": "references_measurement_references__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferencesModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "References"
            }
        },
        "/measurement/schema/": {
            "get": {
                "description": "Returns the JSON schema for the given table.",
                "operationId": "schema_measurement_schema__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Schema Measurement Schema  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Schema"
            }
        },
        "/measurement/{row_id}/": {
            "get": {
                "description": "Retrieve a single row from the table.",
                "operationId": "get_single_measurement__row_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Single"
            }
        },
        "/resident/": {
            "get": {
                "description": "Returns all rows matching the given query.",
                "operationId": "get_resident__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `apartment` column.",
                        "in": "query",
                        "name": "apartment",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `apartment` column.",
                            "title": "Apartment",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "apartment__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Apartment  Operator"
                        }
                    },
                    {
                        "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                        "in": "query",
                        "name": "__order",
                        "required": false,
                        "schema": {
                            "description": "Specifies which field to sort the results by. For example `id` to sort by id, and `-id` for descending.",
                            "title": "  Order",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The number of results to return.",
                        "in": "query",
                        "name": "__page_size",
                        "required": false,
                        "schema": {
                            "description": "The number of results to return.",
                            "title": "  Page Size",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which page of results to return (default 1).",
                        "in": "query",
                        "name": "__page",
                        "required": false,
                        "schema": {
                            "description": "Which page of results to return (default 1).",
                            "title": "  Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                        "in": "query",
                        "name": "__visible_fields",
                        "required": false,
                        "schema": {
                            "description": "The fields to return. It's a comma separated list - for example 'name,address'. By default all fields are returned.",
                            "title": "  Visible Fields",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResidentPlural"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get"
            }
        },
        "/resident/count/": {
            "get": {
                "description": "Returns the number of rows matching the given query.",
                "operationId": "count_resident_count__get",
                "parameters": [
                    {
                        "description": "Filter by the `id` column.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `id` column.",
                            "title": "Id",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "id__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `id`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Id  Operator"
                        }
                    },
                    {
                        "description": "Filter by the `apartment` column.",
                        "in": "query",
                        "name": "apartment",
                        "required": false,
                        "schema": {
                            "description": "Filter by the `apartment` column.",
                            "title": "Apartment",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                        "in": "query",
                        "name": "apartment__operator",
                        "required": false,
                        "schema": {
                            "description": "Which operator to use for `apartment`. The options are `e` (equals - default) `lt`, `lte`, `gt`, and `gte`.",
                            "title": "Apartment  Operator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Count"
            }
        },
        "/resident/ids/": {
            "get": {
                "description": "Returns a mapping of row IDs to a readable representation.",
                "operationId": "ids_resident_ids__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "schema": {
                            "title": "Search",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Ids Resident Ids  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Ids"
            }
        },
        "/resident/new/": {
            "get": {
                "description": "Returns all of the default values for a new row,\nbut doesn't save it.",
                "operationId": "new_resident_new__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response New Resident New  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "New"
            }
        },
        "/resident/references/": {
            "get": {
                "description": "Returns a list of objects showing relationships with other tables.",
                "operationId": "references_resident_references__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferencesModel"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "References"
            }
        },
        "/resident/schema/": {
            "get": {
                "description": "Returns the JSON schema for the given table.",
                "operationId": "schema_resident_schema__get",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Schema Resident Schema  Get",
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful Response"
                    }
                },
                "summary": "Schema"
            }
        },
        "/resident/{row_id}/": {
            "get": {
                "description": "Retrieve a single row from the table.",
                "operationId": "get_single_resident__row_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "row_id",
                        "required": true,
                        "schema": {
                            "title": "Row Id",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResidentOutput"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Single"
            }
        }
    }
}