/**
 * Generated by orval v6.3.0 üç∫
 * Do not edit manually.
 * Drop API
 * The OpenAPI schema for drop.energy
 * OpenAPI spec version: 0.1.0
 */
import { useQuery, UseQueryOptions, QueryFunction } from "react-query";
import { customInstance } from ".././axios";

type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any;

/**
 * @summary Read Users
 */
export const readUsersUsersGet = () => {
  return customInstance<unknown>({ url: `/users`, method: "get" });
};

export const getReadUsersUsersGetQueryKey = () => [`/users`];

export const useReadUsersUsersGet = <
  TData = AsyncReturnType<typeof readUsersUsersGet>,
  TError = unknown
>(options?: {
  query?: UseQueryOptions<
    AsyncReturnType<typeof readUsersUsersGet>,
    TError,
    TData
  >;
}) => {
  const { query: queryOptions } = options || {};

  const queryKey = queryOptions?.queryKey ?? getReadUsersUsersGetQueryKey();

  const queryFn: QueryFunction<AsyncReturnType<typeof readUsersUsersGet>> =
    () => readUsersUsersGet();

  const query = useQuery<
    AsyncReturnType<typeof readUsersUsersGet>,
    TError,
    TData
  >(queryKey, queryFn, queryOptions);

  return {
    queryKey,
    ...query,
  };
};
